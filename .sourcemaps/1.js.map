{"version":3,"sources":["../../src/pages/gallery-profil/gallery-profil.module.ts","../../src/pages/gallery-profil/gallery-profil.ts","../../src/api/specificPhoto.service.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {GalleryProfilPage} from './gallery-profil';\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [\n    GalleryProfilPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(GalleryProfilPage),\n    CommonModule,\n    // IonicImageLoader,\n  ],\n})\nexport class GalleryProfilPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/gallery-profil/gallery-profil.module.ts","import { Component } from '@angular/core';\nimport {IonicPage, NavController, NavParams, Platform} from 'ionic-angular';\nimport {ProfileOut} from \"../../model/profileOut\";\nimport {SearchServiceProvider} from \"../../providers/search-service/search-service\";\nimport {ProfileService} from \"../../api/profile.service\";\nimport {SpecificPhotoService} from \"../../api/specificPhoto.service\";\nimport {Disciplines} from \"../../model/disciplines\";\nimport {ImageLoader, ImageLoaderConfig} from \"ionic-image-loader\";\nimport {HttpClient} from \"@angular/common/http\";\n\n/**\n * Generated class for the GalleryProfilPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-gallery-profil',\n  templateUrl: 'gallery-profil.html',\n})\nexport class GalleryProfilPage {\n  id: number;\n  item: ProfileOut = {};\n  photoArray= [];\n  singlephoto: any;\n jsonData=null;\n  constructor(public platform: Platform, public nav: NavController, public getphoto: SpecificPhotoService,\n              public navParams: NavParams, private provilconfig: SearchServiceProvider,\n  public ProfillRest: ProfileService, public sea: SearchServiceProvider,public httpClient:HttpClient)//,public imageLoader:ImageLoader\n  {\n    debugger;\n    this.id = this.provilconfig.getId2();\n    this.getUsers(this.id);\n\n// this.loadPhoto();\n\n    // this.events.publish('updateScreen');\n  }\n\nloadData(){\nif(!this.jsonData){\nthis.httpClient.get(\"http://localhost:9090/api/photo/2\").subscribe(res =>{\nthis.photoArray=res['results'];\nthis.jsonData=res['results'];\n\n  });\n\n}else{\n  this.photoArray=[];\n  setTimeout(()=> {\n    this.photoArray = this.jsonData;\n  },100);\n\n}\n\n}\n  clearCache(refresher){\n// this.imageLoader.clearCache();\nrefresher.complete();\n\n  }\n\n\n\n\n\n\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad GalleryProfilPage');\n  }\n  backtoprofiles(){\n\n    this.nav.pop();\n\n\n\n  }\n  getUsers(id:number) {\n\n    this.ProfillRest.getProfile(id).subscribe(result => {\n\n      Object.assign(this.item, result);\n\n    });\n  }\n  loadPhoto(){\n    for(let i=0;i<this.item.tr_ph.length,i++;){\n    this.singlephoto=  this.getphoto.photoServiceGetPhoto(this.item.tr_ph[i].id);\n      this.photoArray.push(this.singlephoto);\n\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/gallery-profil/gallery-profil.ts","/**\n * Najlepszy-Trener\n * API zapisywania i listowania na treningi sportowe\n *\n * OpenAPI spec version: 1.0.0\n * Contact: najlepszyterner@com.pl\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs/Observable';\n\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class SpecificPhotoService {\n\n    protected basePath = 'https://virtserver.swaggerhub.com/Wmi-uam/Inz/1.0.0';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get specific photo.\n     * \n     * @param photoId id trenera\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public photoServiceGetPhoto(photoId: number, observe?: 'body', reportProgress?: boolean): Observable<Blob>;\n    public photoServiceGetPhoto(photoId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Blob>>;\n    public photoServiceGetPhoto(photoId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Blob>>;\n    public photoServiceGetPhoto(photoId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (photoId === null || photoId === undefined) {\n            throw new Error('Required parameter photoId was null or undefined when calling photoServiceGetPhoto.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'image/png'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get(`${this.basePath}/photo/${encodeURIComponent(String(photoId))}`,\n            {\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/specificPhoto.service.ts"],"sourceRoot":""}