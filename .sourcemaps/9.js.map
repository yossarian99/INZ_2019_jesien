{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/pages/register/register.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACN;AAY1C;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+DAAY;aAEb;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,+DAAY,CAAC;aACvC;SACF,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACdW;AACqB;AACe;AAC9E,8DAA8D;AACjB;AAO7C;IAaE,sBAAoB,GAAkB,EAAU,IAAyB,EAAU,SAA0B;QAAzF,QAAG,GAAH,GAAG,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAqB;QAAU,cAAS,GAAT,SAAS,CAAiB;QAZ7G,kBAAa,GAAG,KAAK,CAAC;QACtB,wBAAmB,GAAG,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,CAAC;QAErG,wCAAwC;QACxC,kCAAkC;QAClC,qCAAqC;QACrC,mBAAc,GAAQ,GAAG,CAAC;IAMqF,CAAC;IAAA,CAAC;IAE1G,+BAAQ,GAAf;QAAA,iBAmBC;QAlBC,oHAAoH;QACpH,+DAA+D;QAC/D,qHAAqH;QACxH,IAAI,CAAC,QAAQ,GAAC,IAAI,gEAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EACnH,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QAGT,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,iBAAO;YAC/C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,KAAI,CAAC,SAAS,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;YAChD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,2BAA2B,CAAC,CAAC;YACvD,CAAC;QACH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gCAAS,GAAT,UAAU,KAAK,EAAE,IAAI;QAArB,iBAgBC;QAfC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,cAAI;wBACX,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;4BACvB,KAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;wBACvB,CAAC;oBACH,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IACD,mCAAY,GAAZ;QACE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;IAE/B,CAAC;IAxDU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;WACG;SAC7B,CAAC;qBAc6G;OAblG,YAAY,CAyDxB;IAAD,CAAC;AAAA;SAzDY,YAAY,e","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\n\n\n@NgModule({\n  declarations: [\n    RegisterPage\n\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage)\n  ],\n})\nexport class RegisterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController, IonicPage } from 'ionic-angular';\nimport {AuthServiceProvider} from '../../providers/auth-service/auth-service';\n// import {UserProfile} from \"../../models/UserProfile-model\";\nimport {User} from \"../../models/user-model\";\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage {\n  createSuccess = false;\n  registerCredentials = {name:'', email: '', password: '' ,rememberToken:'',createdUp:'',updatedUp:''};\n\n  // registerCredentials:  UserProfile={};\n  // UserProfilTemplate:UserProfile;\n  // UserProfilTemplate:UserProfile={};\n  genderTemplate:string='f';\n  g:string;\n  private userTemp: User;\n\n\n\n  constructor(private nav: NavController, private auth: AuthServiceProvider, private alertCtrl: AlertController){};\n\n  public register() {\n    // this.UserProfilTemplate = new UserProfile(this.registerCredentials.UserName,this.registerCredentials.UserSurname,\n    //   this.registerCredentials.UserPassword,this.genderTemplate,\n    //   this.registerCredentials.UserPhone,this.registerCredentials.UserEmail,this.registerCredentials.UserDescription);\n this.userTemp=new User(this.registerCredentials.name,this.registerCredentials.email,this.registerCredentials.password,\n   '','','');\n\n\n    this.auth.register(this.userTemp).subscribe(success => {\n        if (success) {\n          this.createSuccess = true;\n          this.showPopup(\"Success\", \"Account created.\");\n        } else {\n          this.showPopup(\"Error\", \"Problem creating account.\");\n        }\n      },\n      error => {\n        this.showPopup(\"Error\", error);\n      });\n  }\n\n  showPopup(title, text) {\n    let alert = this.alertCtrl.create({\n      title: title,\n      subTitle: text,\n      buttons: [\n        {\n          text: 'OK',\n          handler: data => {\n            if (this.createSuccess) {\n              this.nav.popToRoot();\n            }\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n  updategender() {\n    this.g = this.genderTemplate;\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}